services:
  auth-service-http:
    build: ./auth_service
    container_name: auth_service_http
    env_file: auth_service/.env
    restart: always
    depends_on:
      - auth-service-db

  user-service-db:
    image: postgres:latest
    command: ["postgres","-c","port=5432"]
    env_file: "./user_service/.env"
    volumes: 
      - user_async_service_postgres_data:/var/lib/postgresql/data
    restart: always

  notes-service-db:
    image: postgres:latest
    command: ["postgres","-c","port=5433"]
    env_file: "./notes_service/.env"
    volumes:
      - notes_async_service_postgres_data:/var/lib/postgresql/data

  auth-service-db:
    image: postgres:latest
    command: ["postgres","-c","port=5434"]
    env_file: "./auth_service/.env"
    volumes:
      - auth_async_service_postgres_data:/var/lib/postgresql/data
    restart: always

  awesome-notes-rabbitmq:
    image: rabbitmq:4.1.0-management
    env_file: ".rabbitmq.env"
    volumes: 
      - awesome-notes_rabbitmq_data:/var/lib/rabbitmq/mnesia/
    restart: on-failure

  awesome-notes-nginx:
    build: ./nginx/
    container_name: awesome-notes-nginx
    depends_on:
      - auth-service-http
    restart: on-failure
    ports: 
      - "80:80"

volumes:
  user_async_service_postgres_data:
  notes_async_service_postgres_data:
  auth_async_service_postgres_data:
  awesome-notes_rabbitmq_data: